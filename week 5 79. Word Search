public class Solution {
    public boolean exist(char[][] board, String word) {
        if(word == null || word.length() == 0){
            return true;
        }
        char[] str = word.toCharArray();
        
        for (int i = 0; i < board.length; i++){
            for(int j = 0; j < board[0].length; j++){
                if (helper(board, str, i, j, 0)){
                    return true;
                }
            }
        }
        return false;
    }
    public boolean helper (char [][] board, char[] str, int i, int j, int pos){
        if(pos == str.length){
            return true;
        }
if (i < 0 || i >= board.length || j < 0 || j >= board[0].length || board[i][j] != str[pos]){
            return false;
        }
        char cur = board [i] [j];
        board [i] [j] = '$';
        boolean res = helper (board, str, i - 1, j, pos + 1)
                    ||helper (board, str, i + 1, j, pos + 1)
                    ||helper (board, str, i, j - 1, pos + 1) 
                    ||helper (board, str, i, j + 1, pos + 1);
    board [i] [j] = cur;
    return res;
    }
}
