public class MedianFinder {
    public int compare(Integer l1, Integer l2){
        //return l2 - l1;
        if(l2 > l1){
            return 1;
        }else if (l2 < l1){
            return -1;
        } else {
            return 0;
        }
        // return l2.compareTo(l1);
    }
    public PriorityQueue<Integer> minHeap = new PriorityQueue<>();
    public PriorityQueue<Integer> maxHeap = new PriorityQueue<>(new MyComparator());

    /** initialize your data structure here. */
    public MedianFinder() {
        
    }
    
    public void addNum(int num) {
        minHeap.add(num);
        maxHeap.add(minHeap.poll());
        if(maxHeap.size() > minHeap.size()){
            minHeap.add (maxHeap.poll());
        }
    }
    
    public double findMedian() {
        if(maxHeap.size() == minHeap.size()){
            return (double)(maxHeap.peek() + minheap.peek())/2;
        }else{
            return (double)minHeap.peek();
        }
    }
}

/**
 * Your MedianFinder object will be instantiated and called as such:
 * MedianFinder obj = new MedianFinder();
 * obj.addNum(num);
 * double param_2 = obj.findMedian();
 */
